// Стек.cpp: определяет точку входа для консольного приложения.
//

#include "stdafx.h"
#include <iostream>
#include <conio.h>
#include <locale.h>
#include <time.h>

using namespace std;
int n;

struct Stack
{
  int *arr;
	int count;
};

void Initial (int N, Stack *&p)                 //Инициализация стека
{
	p = new Stack[N];
	p->arr = new int[N];
	p->count = 0;
}

int CheckFull (Stack *&p)                       //Проверка стека на заполненность
{
	if (p->count == n)
		return 1;
	else
		return 0;
}

int CheckEmpty (Stack *&p)                      //проверка стека на пустоту
{
	if (p->count == 0)
		return 1;
	else
		return 0;
}


void push(int a, Stack *&p)                      //Добавление элемента в стек
{
	if (CheckFull(p) == 0)
	{
		p->arr[p->count] = a;
		p->count ++;
	}
	else
		cout <<"Ошибка! Стек заполнен!" << endl;
}

void pop (Stack *&p)                             //Удаление элемента из стека
{
	if (CheckEmpty(p) == 0)
		p->count --;
	else
		cout <<"Ошибка! Стек пустой!" << endl;
}

void ShowStack (Stack *&p)
{
	for (int i = 0; i < p->count; i++)
		cout << p->arr[i] << endl;
}

void ShowElement (int num, Stack *&p)
{
	for (int i = 0; i < p->count; i++)
	{
		if (i == (num - 1))
			cout <<"Элемент №" << num << ": " << p->arr[i] << endl;
	}
}

int main()
{
	setlocale(LC_ALL, "rus");
	srand(time(NULL));
	Stack *p;
	cout <<"Введите размер стека: ";
	cin >> n;
	Initial (n, p);                             //Инициализируем стек

	for(int i = 0; i < n; i++)
		push (rand() % 10, p);

	ShowStack(p);                               //Выводим стек
	pop (p);                                    //Удаляем элемент из стека
	cout << endl;
	cout <<"После удаления:" << endl;
	ShowStack(p);                               //Выводим стек
	cout << endl;
	ShowElement (2, p);                         //Показываем элемент по номеру
	_getch();
	return 0;
}
